package com.leetcode.prolems;

import java.util.*;

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Problem2 {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1 == null || l2 == null)
            return l1 == null ? l2 : l1;
        ListNode result = new ListNode(-1);
        ListNode dummy = result;
        int carry = 0;
        while(l1 != null || l2 != null){
            int sum = (l1 == null ? 0 : l1.val) + (l2 == null ? 0 : l2.val) + carry;
            if(sum > 9){
                sum = sum - 10;
                carry = 1;
            }else{
                carry = 0;
            }
            dummy.next = new ListNode(sum);
            dummy = dummy.next;
            l1 = l1 == null ? null : l1.next;
            l2 = l2 == null ? null : l2.next;
        }
        if(carry == 1){
            dummy.next = new ListNode(carry);
            dummy = dummy.next;
        }
        return result.next;
    }
}
